# .bashrc
if [ -f /etc/bashrc ]; then
    source /etc/bashrc
fi

# Shell options
shopt -s cdspell       # auto-correct errors on cd
shopt -s histappend    # append not truncate
shopt -s hostcomplete  # complete after '@'

# Variables
export LD_LIBRARY_PATH=/usr/local/lib
export LIBRARY_PATH=/usr/local/lib
export CPATH=/usr/local/include

export HISTCONTROL=ignoreboth
export HISTFILESIZE=10000
export HISTSIZE=10000

export VIM_COMMAND='vim'
export DIFF_COMMAND='git diff --'
export GREP_COMMAND='grep -Ins --color --exclude=*.tags --exclude-dir={.git,.svn}'
export LS_COMMAND='ls -lF --color'

# Aliases
function le() {
    less -R "$@"
}
function d() {
    dirs -p "$@"
}
function pd() {
    pushd "$@" > /dev/null
}
function p() {
    popd "$@" > /dev/null
}
function v() {
    ${VIM_COMMAND} "$@"
}
function df() {
    ${DIFF_COMMAND} "$@"
}
function g() {
    ${GREP_COMMAND} "$@"
}
function gr() {
    ${GREP_COMMAND} -ER "$@" *
}
function gf() {
    ${GREP_COMMAND} -E "${1}" $(find -L . -name "${2}")
}
function ll() {
    ${LS_COMMAND} "$@"
}

# VIM integration
export EDITOR=${VIM_COMMAND}
set -o vi 

# Git integration
if [ -d /usr/share/git-core/contrib ]; then
  cd /usr/share/git-core/contrib
  if [ -f completion/git-completion.sh ]; then
    source completion/git-completion.sh
  fi
  if [ -f completion/git-prompt.sh ]; then
      source completion/git-prompt.sh
  fi
  cd -
fi
if [ -f /usr/local/etc/bash_completion.d/git-prompt.sh ]; then
    source /usr/local/etc/bash_completion.d/git-prompt.sh
fi
if [ -f /etc/bash_completion.d/git-prompt ]; then
    source /etc/bash_completion.d/git-prompt
fi

export GIT_PS1_SHOWCOLORHINTS=true
export GIT_PS1_SHOWDIRTYSTATE=true
export GIT_PS1_SHOWUPSTREAM="auto"
export PROMPT_COMMAND='__git_ps1 "[\u@\h \w]" "\\\$ ";'

# Per-OS Options
OS=`uname -s`
case "$OS" in
  "Linux" )
    ;;
  "Darwin")
    export CLICOLOR=true
    export LSCOLORS=ExFxBxDxCxegedabagacad
    export LS_COMMAND='ls -lGF'
    ;;
  * )
    ;;
esac
